{"ast":null,"code":"import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var _a;\n  var style = state.style,\n    vars = state.vars,\n    transform = state.transform,\n    transformKeys = state.transformKeys,\n    transformOrigin = state.transformOrigin;\n  // Empty the transformKeys array. As we're throwing out refs to its items\n  // this might not be as cheap as suspected. Maybe using the array as a buffer\n  // with a manual incrementation would be better.\n  transformKeys.length = 0;\n  // Track whether we encounter any transform or transformOrigin values.\n  var hasTransform = false;\n  var hasTransformOrigin = false;\n  // Does the calculated transform essentially equal \"none\"?\n  var transformIsNone = true;\n  /**\n   * Loop over all our latest animated values and decide whether to handle them\n   * as a style or CSS variable.\n   *\n   * Transforms and transform origins are kept seperately for further processing.\n   */\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\n     * If this is a CSS variable we don't do any further processing.\n     */\n    if (isCSSVariable(key)) {\n      vars[key] = value;\n      continue;\n    }\n    // Convert the value to its default value type, ie 0 -> \"0px\"\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n    if (isTransformProp(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key);\n      // If we already know we have a non-default transform, early return\n      if (!transformIsNone) continue;\n      // Otherwise check to see if this is a default transform\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0)) transformIsNone = false;\n    } else if (isTransformOriginProp(key)) {\n      transformOrigin[key] = valueAsType;\n      // If this is a transform origin, flag and enable further transform-origin processing\n      hasTransformOrigin = true;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n  if (hasTransform) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (transformTemplate) {\n    style.transform = transformTemplate({}, \"\");\n  } else if (!latestValues.transform && style.transform) {\n    style.transform = \"none\";\n  }\n  if (hasTransformOrigin) {\n    style.transformOrigin = buildTransformOrigin(transformOrigin);\n  }\n}\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","buildTransformOrigin","isCSSVariable","isTransformProp","isTransformOriginProp","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","_a","style","vars","transform","transformKeys","transformOrigin","length","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","push","default"],"sources":["C:/Users/hp/Desktop/JavaScript_fullstack_webDev/React/youtube/project2/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nexport { buildHTMLStyles };\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,uBAAuB;AAC5E,SAASC,aAAa,QAAQ,qCAAqC;AACnE,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,iBAAiB;AACxE,SAASC,cAAc,QAAQ,uCAAuC;AACtE,SAASC,gBAAgB,QAAQ,kCAAkC;AAEnE,SAASC,eAAeA,CAACC,KAAK,EAAEC,YAAY,EAAEC,OAAO,EAAEC,iBAAiB,EAAE;EACtE,IAAIC,EAAE;EACN,IAAIC,KAAK,GAAGL,KAAK,CAACK,KAAK;IAAEC,IAAI,GAAGN,KAAK,CAACM,IAAI;IAAEC,SAAS,GAAGP,KAAK,CAACO,SAAS;IAAEC,aAAa,GAAGR,KAAK,CAACQ,aAAa;IAAEC,eAAe,GAAGT,KAAK,CAACS,eAAe;EACrJ;EACA;EACA;EACAD,aAAa,CAACE,MAAM,GAAG,CAAC;EACxB;EACA,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,kBAAkB,GAAG,KAAK;EAC9B;EACA,IAAIC,eAAe,GAAG,IAAI;EAC1B;AACJ;AACA;AACA;AACA;AACA;EACI,KAAK,IAAIC,GAAG,IAAIb,YAAY,EAAE;IAC1B,IAAIc,KAAK,GAAGd,YAAY,CAACa,GAAG,CAAC;IAC7B;AACR;AACA;IACQ,IAAIpB,aAAa,CAACoB,GAAG,CAAC,EAAE;MACpBR,IAAI,CAACQ,GAAG,CAAC,GAAGC,KAAK;MACjB;IACJ;IACA;IACA,IAAIC,SAAS,GAAGlB,gBAAgB,CAACgB,GAAG,CAAC;IACrC,IAAIG,WAAW,GAAGpB,cAAc,CAACkB,KAAK,EAAEC,SAAS,CAAC;IAClD,IAAIrB,eAAe,CAACmB,GAAG,CAAC,EAAE;MACtB;MACAH,YAAY,GAAG,IAAI;MACnBJ,SAAS,CAACO,GAAG,CAAC,GAAGG,WAAW;MAC5BT,aAAa,CAACU,IAAI,CAACJ,GAAG,CAAC;MACvB;MACA,IAAI,CAACD,eAAe,EAChB;MACJ;MACA,IAAIE,KAAK,MAAM,CAACX,EAAE,GAAGY,SAAS,CAACG,OAAO,MAAM,IAAI,IAAIf,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EACvES,eAAe,GAAG,KAAK;IAC/B,CAAC,MACI,IAAIjB,qBAAqB,CAACkB,GAAG,CAAC,EAAE;MACjCL,eAAe,CAACK,GAAG,CAAC,GAAGG,WAAW;MAClC;MACAL,kBAAkB,GAAG,IAAI;IAC7B,CAAC,MACI;MACDP,KAAK,CAACS,GAAG,CAAC,GAAGG,WAAW;IAC5B;EACJ;EACA,IAAIN,YAAY,EAAE;IACdN,KAAK,CAACE,SAAS,GAAGf,cAAc,CAACQ,KAAK,EAAEE,OAAO,EAAEW,eAAe,EAAEV,iBAAiB,CAAC;EACxF,CAAC,MACI,IAAIA,iBAAiB,EAAE;IACxBE,KAAK,CAACE,SAAS,GAAGJ,iBAAiB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC/C,CAAC,MACI,IAAI,CAACF,YAAY,CAACM,SAAS,IAAIF,KAAK,CAACE,SAAS,EAAE;IACjDF,KAAK,CAACE,SAAS,GAAG,MAAM;EAC5B;EACA,IAAIK,kBAAkB,EAAE;IACpBP,KAAK,CAACI,eAAe,GAAGhB,oBAAoB,CAACgB,eAAe,CAAC;EACjE;AACJ;AAEA,SAASV,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}