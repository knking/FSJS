{"ast":null,"code":"import { px } from 'style-value-types';\nvar dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nvar camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n  if (spacing === void 0) {\n    spacing = 1;\n  }\n  if (offset === void 0) {\n    offset = 0;\n  }\n  if (useDashCase === void 0) {\n    useDashCase = true;\n  }\n  // Normalise path length by setting SVG attribute pathLength to 1\n  attrs.pathLength = 1;\n  // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n  var keys = useDashCase ? dashKeys : camelKeys;\n  // Build the dash offset\n  attrs[keys.offset] = px.transform(-offset);\n  // Build the dash array\n  var pathLength = px.transform(length);\n  var pathSpacing = px.transform(spacing);\n  attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\nexport { buildSVGPath };","map":{"version":3,"names":["px","dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","keys","transform","pathSpacing","concat"],"sources":["C:/Users/hp/Desktop/JavaScript_fullstack_webDev/React/youtube/project2/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from 'style-value-types';\n\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    var pathLength = px.transform(length);\n    var pathSpacing = px.transform(spacing);\n    attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\n\nexport { buildSVGPath };\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,mBAAmB;AAEtC,IAAIC,QAAQ,GAAG;EACXC,MAAM,EAAE,mBAAmB;EAC3BC,KAAK,EAAE;AACX,CAAC;AACD,IAAIC,SAAS,GAAG;EACZF,MAAM,EAAE,kBAAkB;EAC1BC,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEN,MAAM,EAAEO,WAAW,EAAE;EAC/D,IAAID,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC;EAAE;EACvC,IAAIN,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,CAAC;EAAE;EACrC,IAAIO,WAAW,KAAK,KAAK,CAAC,EAAE;IAAEA,WAAW,GAAG,IAAI;EAAE;EAClD;EACAH,KAAK,CAACI,UAAU,GAAG,CAAC;EACpB;EACA;EACA,IAAIC,IAAI,GAAGF,WAAW,GAAGR,QAAQ,GAAGG,SAAS;EAC7C;EACAE,KAAK,CAACK,IAAI,CAACT,MAAM,CAAC,GAAGF,EAAE,CAACY,SAAS,CAAC,CAACV,MAAM,CAAC;EAC1C;EACA,IAAIQ,UAAU,GAAGV,EAAE,CAACY,SAAS,CAACL,MAAM,CAAC;EACrC,IAAIM,WAAW,GAAGb,EAAE,CAACY,SAAS,CAACJ,OAAO,CAAC;EACvCF,KAAK,CAACK,IAAI,CAACR,KAAK,CAAC,GAAG,EAAE,CAACW,MAAM,CAACJ,UAAU,EAAE,GAAG,CAAC,CAACI,MAAM,CAACD,WAAW,CAAC;AACtE;AAEA,SAASR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}